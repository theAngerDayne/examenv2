// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201017040715_Agrego propiedades a usuario2")]
    partial class Agregopropiedadesausuario2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("Core.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Telefono")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Core.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("CuentaId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("NUMBER(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal>("SaldoInicial")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<int>("TipoCuenta")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CuentaId");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("RAW(2000)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("RAW(2000)");

                    b.Property<DateTime>("UltimoAcceso")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            Email = "angel@duoc.cl",
                            IsActive = true,
                            PasswordHash = new byte[] { 178, 159, 174, 87, 158, 73, 196, 233, 239, 18, 94, 32, 248, 231, 154, 84, 225, 65, 204, 22, 192, 175, 96, 91, 218, 239, 216, 143, 152, 9, 145, 67, 2, 63, 64, 84, 130, 150, 16, 88, 0, 124, 200, 102, 36, 38, 149, 215, 84, 120, 199, 183, 33, 156, 18, 65, 95, 111, 33, 90, 206, 35, 200, 162 },
                            PasswordSalt = new byte[] { 122, 89, 167, 68, 130, 184, 2, 149, 33, 198, 63, 74, 49, 34, 88, 175, 243, 236, 192, 117, 248, 15, 2, 75, 119, 158, 170, 236, 161, 28, 184, 226, 179, 250, 153, 211, 91, 80, 81, 106, 45, 43, 90, 60, 209, 245, 226, 107, 104, 1, 96, 144, 241, 215, 56, 126, 29, 17, 94, 111, 20, 197, 82, 76, 54, 195, 38, 182, 249, 177, 235, 211, 27, 242, 156, 230, 185, 17, 155, 58, 159, 191, 144, 52, 81, 219, 201, 129, 239, 219, 93, 146, 87, 188, 63, 252, 95, 132, 68, 245, 169, 223, 167, 31, 254, 166, 193, 58, 108, 158, 136, 11, 84, 1, 2, 158, 117, 124, 24, 179, 6, 173, 174, 88, 178, 126, 220, 228 },
                            UltimoAcceso = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "Angel"
                        },
                        new
                        {
                            Id = 101,
                            Email = "profe.moises@duoc.cl",
                            IsActive = true,
                            PasswordHash = new byte[] { 178, 159, 174, 87, 158, 73, 196, 233, 239, 18, 94, 32, 248, 231, 154, 84, 225, 65, 204, 22, 192, 175, 96, 91, 218, 239, 216, 143, 152, 9, 145, 67, 2, 63, 64, 84, 130, 150, 16, 88, 0, 124, 200, 102, 36, 38, 149, 215, 84, 120, 199, 183, 33, 156, 18, 65, 95, 111, 33, 90, 206, 35, 200, 162 },
                            PasswordSalt = new byte[] { 122, 89, 167, 68, 130, 184, 2, 149, 33, 198, 63, 74, 49, 34, 88, 175, 243, 236, 192, 117, 248, 15, 2, 75, 119, 158, 170, 236, 161, 28, 184, 226, 179, 250, 153, 211, 91, 80, 81, 106, 45, 43, 90, 60, 209, 245, 226, 107, 104, 1, 96, 144, 241, 215, 56, 126, 29, 17, 94, 111, 20, 197, 82, 76, 54, 195, 38, 182, 249, 177, 235, 211, 27, 242, 156, 230, 185, 17, 155, 58, 159, 191, 144, 52, 81, 219, 201, 129, 239, 219, 93, 146, 87, 188, 63, 252, 95, 132, 68, 245, 169, 223, 167, 31, 254, 166, 193, 58, 108, 158, 136, 11, 84, 1, 2, 158, 117, 124, 24, 179, 6, 173, 174, 88, 178, 126, 220, 228 },
                            UltimoAcceso = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "ProfeMoises"
                        });
                });

            modelBuilder.Entity("Core.Cuenta", b =>
                {
                    b.HasOne("Core.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("Core.Cuenta", null)
                        .WithMany("Cuentas")
                        .HasForeignKey("CuentaId");
                });
#pragma warning restore 612, 618
        }
    }
}
