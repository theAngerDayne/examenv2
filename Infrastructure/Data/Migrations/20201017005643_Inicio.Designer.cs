// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201017005643_Inicio")]
    partial class Inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("Core.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Telefono")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Core.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal>("SaldoInicial")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<int>("TipoCuenta")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UserId");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("RAW(2000)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("RAW(2000)");

                    b.Property<string>("Username")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 156, 147, 201, 119, 229, 165, 119, 219, 110, 128, 5, 59, 90, 44, 227, 196, 50, 138, 133, 159, 16, 145, 229, 117, 164, 121, 151, 92, 202, 15, 98, 200, 196, 66, 45, 160, 126, 51, 131, 118, 203, 133, 235, 195, 19, 87, 18, 88, 129, 53, 19, 87, 106, 72, 215, 89, 155, 164, 68, 227, 172, 28, 71, 131 },
                            PasswordSalt = new byte[] { 142, 75, 106, 131, 212, 137, 18, 135, 165, 133, 227, 193, 43, 8, 47, 54, 56, 120, 146, 199, 182, 128, 13, 76, 210, 163, 105, 37, 157, 32, 198, 250, 189, 118, 126, 129, 87, 50, 4, 215, 16, 160, 176, 187, 105, 247, 76, 196, 62, 99, 188, 7, 55, 203, 211, 160, 160, 133, 7, 201, 251, 69, 239, 223, 105, 202, 77, 147, 123, 91, 234, 154, 52, 106, 39, 251, 135, 27, 168, 86, 73, 176, 187, 204, 200, 190, 133, 47, 85, 255, 24, 172, 137, 149, 187, 41, 24, 145, 250, 48, 208, 86, 83, 226, 249, 85, 235, 215, 191, 15, 250, 167, 76, 193, 152, 250, 85, 14, 81, 196, 78, 187, 177, 129, 135, 7, 234, 15 },
                            Username = "Angel"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 156, 147, 201, 119, 229, 165, 119, 219, 110, 128, 5, 59, 90, 44, 227, 196, 50, 138, 133, 159, 16, 145, 229, 117, 164, 121, 151, 92, 202, 15, 98, 200, 196, 66, 45, 160, 126, 51, 131, 118, 203, 133, 235, 195, 19, 87, 18, 88, 129, 53, 19, 87, 106, 72, 215, 89, 155, 164, 68, 227, 172, 28, 71, 131 },
                            PasswordSalt = new byte[] { 142, 75, 106, 131, 212, 137, 18, 135, 165, 133, 227, 193, 43, 8, 47, 54, 56, 120, 146, 199, 182, 128, 13, 76, 210, 163, 105, 37, 157, 32, 198, 250, 189, 118, 126, 129, 87, 50, 4, 215, 16, 160, 176, 187, 105, 247, 76, 196, 62, 99, 188, 7, 55, 203, 211, 160, 160, 133, 7, 201, 251, 69, 239, 223, 105, 202, 77, 147, 123, 91, 234, 154, 52, 106, 39, 251, 135, 27, 168, 86, 73, 176, 187, 204, 200, 190, 133, 47, 85, 255, 24, 172, 137, 149, 187, 41, 24, 145, 250, 48, 208, 86, 83, 226, 249, 85, 235, 215, 191, 15, 250, 167, 76, 193, 152, 250, 85, 14, 81, 196, 78, 187, 177, 129, 135, 7, 234, 15 },
                            Username = "ProfeMoises"
                        });
                });

            modelBuilder.Entity("Core.Cuenta", b =>
                {
                    b.HasOne("Core.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("Core.User", null)
                        .WithMany("Cuentas")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
