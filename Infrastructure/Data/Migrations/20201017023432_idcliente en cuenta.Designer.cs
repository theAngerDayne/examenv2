// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201017023432_idcliente en cuenta")]
    partial class idclienteencuenta
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("Core.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Telefono")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Core.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("NUMBER(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal>("SaldoInicial")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<int>("TipoCuenta")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UserId");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("RAW(2000)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("RAW(2000)");

                    b.Property<string>("Username")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 207, 90, 191, 227, 172, 187, 61, 9, 14, 127, 60, 157, 9, 237, 43, 118, 232, 148, 11, 83, 222, 58, 135, 81, 114, 127, 221, 201, 48, 216, 254, 61, 254, 58, 254, 107, 58, 144, 22, 12, 248, 211, 185, 30, 169, 124, 96, 170, 219, 190, 56, 36, 20, 165, 235, 196, 97, 64, 219, 97, 247, 41, 255, 35 },
                            PasswordSalt = new byte[] { 70, 102, 24, 65, 209, 138, 37, 175, 188, 94, 163, 163, 33, 234, 246, 22, 162, 9, 59, 194, 98, 119, 181, 40, 109, 48, 239, 72, 214, 245, 169, 224, 244, 177, 207, 72, 251, 197, 244, 3, 39, 113, 17, 104, 20, 140, 73, 142, 185, 169, 124, 184, 148, 64, 100, 190, 60, 193, 251, 63, 40, 140, 106, 5, 15, 231, 117, 213, 120, 136, 255, 76, 202, 134, 252, 61, 123, 249, 218, 98, 103, 33, 161, 183, 111, 98, 249, 8, 180, 42, 187, 78, 157, 68, 117, 21, 90, 231, 62, 222, 130, 68, 72, 168, 2, 172, 94, 83, 172, 188, 29, 178, 218, 219, 82, 242, 155, 24, 18, 182, 4, 46, 195, 10, 146, 104, 141, 139 },
                            Username = "Angel"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 207, 90, 191, 227, 172, 187, 61, 9, 14, 127, 60, 157, 9, 237, 43, 118, 232, 148, 11, 83, 222, 58, 135, 81, 114, 127, 221, 201, 48, 216, 254, 61, 254, 58, 254, 107, 58, 144, 22, 12, 248, 211, 185, 30, 169, 124, 96, 170, 219, 190, 56, 36, 20, 165, 235, 196, 97, 64, 219, 97, 247, 41, 255, 35 },
                            PasswordSalt = new byte[] { 70, 102, 24, 65, 209, 138, 37, 175, 188, 94, 163, 163, 33, 234, 246, 22, 162, 9, 59, 194, 98, 119, 181, 40, 109, 48, 239, 72, 214, 245, 169, 224, 244, 177, 207, 72, 251, 197, 244, 3, 39, 113, 17, 104, 20, 140, 73, 142, 185, 169, 124, 184, 148, 64, 100, 190, 60, 193, 251, 63, 40, 140, 106, 5, 15, 231, 117, 213, 120, 136, 255, 76, 202, 134, 252, 61, 123, 249, 218, 98, 103, 33, 161, 183, 111, 98, 249, 8, 180, 42, 187, 78, 157, 68, 117, 21, 90, 231, 62, 222, 130, 68, 72, 168, 2, 172, 94, 83, 172, 188, 29, 178, 218, 219, 82, 242, 155, 24, 18, 182, 4, 46, 195, 10, 146, 104, 141, 139 },
                            Username = "ProfeMoises"
                        });
                });

            modelBuilder.Entity("Core.Cuenta", b =>
                {
                    b.HasOne("Core.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("Core.User", null)
                        .WithMany("Cuentas")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
