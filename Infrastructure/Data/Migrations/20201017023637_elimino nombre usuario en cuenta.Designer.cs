// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201017023637_elimino nombre usuario en cuenta")]
    partial class eliminonombreusuarioencuenta
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("Core.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Telefono")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Core.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("NUMBER(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal>("SaldoInicial")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<int>("TipoCuenta")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UserId");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("RAW(2000)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("RAW(2000)");

                    b.Property<string>("Username")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 104, 38, 112, 172, 178, 20, 85, 58, 68, 5, 247, 67, 47, 199, 73, 61, 123, 186, 226, 9, 164, 106, 242, 196, 85, 166, 115, 18, 105, 152, 98, 103, 128, 167, 34, 214, 121, 82, 155, 158, 133, 224, 5, 222, 87, 117, 253, 38, 118, 137, 38, 197, 62, 214, 16, 186, 110, 16, 157, 169, 194, 47, 190, 76 },
                            PasswordSalt = new byte[] { 251, 135, 39, 38, 38, 147, 157, 228, 144, 52, 66, 193, 144, 111, 240, 119, 58, 77, 119, 127, 91, 21, 154, 71, 238, 106, 103, 33, 136, 145, 255, 172, 241, 180, 105, 13, 231, 78, 229, 76, 31, 190, 37, 252, 65, 39, 65, 242, 126, 133, 69, 222, 33, 178, 129, 70, 34, 247, 111, 103, 177, 249, 70, 159, 88, 235, 132, 129, 102, 205, 102, 113, 22, 167, 58, 7, 251, 186, 72, 142, 85, 100, 178, 108, 6, 195, 227, 13, 57, 235, 253, 200, 221, 0, 113, 232, 92, 129, 9, 185, 196, 142, 83, 129, 92, 192, 89, 142, 117, 125, 215, 69, 120, 74, 80, 208, 20, 86, 38, 140, 122, 77, 111, 83, 14, 170, 44, 145 },
                            Username = "Angel"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 104, 38, 112, 172, 178, 20, 85, 58, 68, 5, 247, 67, 47, 199, 73, 61, 123, 186, 226, 9, 164, 106, 242, 196, 85, 166, 115, 18, 105, 152, 98, 103, 128, 167, 34, 214, 121, 82, 155, 158, 133, 224, 5, 222, 87, 117, 253, 38, 118, 137, 38, 197, 62, 214, 16, 186, 110, 16, 157, 169, 194, 47, 190, 76 },
                            PasswordSalt = new byte[] { 251, 135, 39, 38, 38, 147, 157, 228, 144, 52, 66, 193, 144, 111, 240, 119, 58, 77, 119, 127, 91, 21, 154, 71, 238, 106, 103, 33, 136, 145, 255, 172, 241, 180, 105, 13, 231, 78, 229, 76, 31, 190, 37, 252, 65, 39, 65, 242, 126, 133, 69, 222, 33, 178, 129, 70, 34, 247, 111, 103, 177, 249, 70, 159, 88, 235, 132, 129, 102, 205, 102, 113, 22, 167, 58, 7, 251, 186, 72, 142, 85, 100, 178, 108, 6, 195, 227, 13, 57, 235, 253, 200, 221, 0, 113, 232, 92, 129, 9, 185, 196, 142, 83, 129, 92, 192, 89, 142, 117, 125, 215, 69, 120, 74, 80, 208, 20, 86, 38, 140, 122, 77, 111, 83, 14, 170, 44, 145 },
                            Username = "ProfeMoises"
                        });
                });

            modelBuilder.Entity("Core.Cuenta", b =>
                {
                    b.HasOne("Core.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("Core.User", null)
                        .WithMany("Cuentas")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
