// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("Core.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Telefono")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Core.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("CuentaId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("NUMBER(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal>("SaldoInicial")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<int>("TipoCuenta")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CuentaId");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("RAW(2000)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("RAW(2000)");

                    b.Property<DateTime>("UltimoAcceso")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Username")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            Email = "angel@duoc.cl",
                            IsActive = true,
                            PasswordHash = new byte[] { 81, 64, 154, 130, 52, 167, 49, 108, 136, 250, 75, 95, 79, 235, 198, 136, 163, 222, 191, 242, 230, 225, 146, 232, 110, 147, 136, 201, 71, 220, 168, 75, 170, 134, 216, 104, 200, 201, 8, 244, 220, 255, 7, 131, 190, 55, 202, 47, 107, 208, 243, 55, 126, 147, 59, 174, 47, 220, 119, 6, 203, 209, 255, 26 },
                            PasswordSalt = new byte[] { 42, 214, 144, 105, 90, 80, 61, 148, 74, 62, 248, 138, 144, 99, 55, 186, 223, 200, 60, 89, 196, 127, 56, 184, 22, 36, 188, 221, 38, 43, 250, 205, 102, 118, 251, 38, 248, 146, 119, 159, 48, 143, 39, 76, 125, 21, 38, 124, 62, 2, 82, 159, 172, 251, 94, 1, 74, 199, 122, 211, 236, 227, 173, 106, 152, 74, 31, 114, 88, 125, 162, 252, 200, 254, 77, 10, 132, 80, 166, 243, 3, 145, 177, 62, 67, 86, 19, 142, 218, 242, 144, 115, 37, 88, 69, 165, 127, 236, 11, 54, 99, 46, 180, 134, 57, 129, 105, 147, 183, 38, 189, 240, 186, 45, 175, 178, 62, 182, 210, 116, 100, 253, 149, 201, 212, 82, 97, 191 },
                            UltimoAcceso = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "Angel"
                        },
                        new
                        {
                            Id = 101,
                            Email = "profe.moises@duoc.cl",
                            IsActive = true,
                            PasswordHash = new byte[] { 81, 64, 154, 130, 52, 167, 49, 108, 136, 250, 75, 95, 79, 235, 198, 136, 163, 222, 191, 242, 230, 225, 146, 232, 110, 147, 136, 201, 71, 220, 168, 75, 170, 134, 216, 104, 200, 201, 8, 244, 220, 255, 7, 131, 190, 55, 202, 47, 107, 208, 243, 55, 126, 147, 59, 174, 47, 220, 119, 6, 203, 209, 255, 26 },
                            PasswordSalt = new byte[] { 42, 214, 144, 105, 90, 80, 61, 148, 74, 62, 248, 138, 144, 99, 55, 186, 223, 200, 60, 89, 196, 127, 56, 184, 22, 36, 188, 221, 38, 43, 250, 205, 102, 118, 251, 38, 248, 146, 119, 159, 48, 143, 39, 76, 125, 21, 38, 124, 62, 2, 82, 159, 172, 251, 94, 1, 74, 199, 122, 211, 236, 227, 173, 106, 152, 74, 31, 114, 88, 125, 162, 252, 200, 254, 77, 10, 132, 80, 166, 243, 3, 145, 177, 62, 67, 86, 19, 142, 218, 242, 144, 115, 37, 88, 69, 165, 127, 236, 11, 54, 99, 46, 180, 134, 57, 129, 105, 147, 183, 38, 189, 240, 186, 45, 175, 178, 62, 182, 210, 116, 100, 253, 149, 201, 212, 82, 97, 191 },
                            UltimoAcceso = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "ProfeMoises"
                        });
                });

            modelBuilder.Entity("Core.Cuenta", b =>
                {
                    b.HasOne("Core.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("Core.Cuenta", null)
                        .WithMany("Cuentas")
                        .HasForeignKey("CuentaId");
                });
#pragma warning restore 612, 618
        }
    }
}
